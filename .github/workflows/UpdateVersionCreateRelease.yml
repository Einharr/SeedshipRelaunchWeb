name: Update Version and Create Release

on: 
  workflow_dispatch:
    inputs:
      version:
        description: 'New version'
        required: true

jobs:
  update_version:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup xmlstarlet
      run: sudo apt-get install -y xmlstarlet

    - name: Update version
      run: |
        NEW_VERSION=${{ github.event.inputs.version }}
        XML_FILE_PATH="config.xml"
        JS_FILE_PATH="data/menu.js"
        xmlstarlet edit --inplace --update "/widget/@version" --value "${{ github.event.inputs.version }}" $XML_FILE_PATH
        sed -i "s/var curVersion = \".*\";/var curVersion = \"${{ github.event.inputs.version }}\";/" $JS_FILE_PATH
        cat $XML_FILE_PATH
        cat $JS_FILE_PATH

    # - name: Commit and push changes
    #   run: |
    #     git config --local user.email "action@github.com"
    #     git config --local user.name "GitHub Action"
    #     git add $XML_FILE_PATH $JS_FILE_PATH
    #     git commit -m "Update version to $NEW_VERSION"
    #     git tag $NEW_VERSION
    #     git push origin --tags

    - name: Archive files
      run: tar czvf files.tar.gz $XML_FILE_PATH $JS_FILE_PATH
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: files
        path: files.tar.gz

    # - name: Create Release
    #   id: create_release
    #   uses: actions/create-release@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
    #   with:
    #     tag_name: ${{ github.event.inputs.version }}
    #     release_name: ${{ github.event.inputs.version }}
    #     body: |
    #       Version ${{ github.event.inputs.version }}
    #       --------------
          
